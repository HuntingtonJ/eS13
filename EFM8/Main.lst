0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Apr 29 00:26:37 2018
0000              5   ;--------------------------------------------------------
                  5   $name Main
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _Timer2_ISR
0000             28            public __c51_external_startup
0000             29            public _gauge_state
0000             30            public _hours
0000             31            public _minutes
0000             32            public _seconds
0000             33            public _milliseconds
0000             34            public _UART0_init
0000             35            public _Timer1_init
0000             36            public _Timer2_init
0000             37            public _Pin_init
0000             38            public _getIO
0000             39            public _gauge_update
0000             40   ;--------------------------------------------------------
0000             41   ; Special Function Registers
0000             42   ;--------------------------------------------------------
0000             43   _ACC            DATA 0xe0
0000             44   _ADC0ASAH       DATA 0xb6
0000             45   _ADC0ASAL       DATA 0xb5
0000             46   _ADC0ASCF       DATA 0xa1
0000             47   _ADC0ASCT       DATA 0xc7
0000             48   _ADC0CF0        DATA 0xbc
0000             49   _ADC0CF1        DATA 0xb9
0000             50   _ADC0CF2        DATA 0xdf
0000             51   _ADC0CN0        DATA 0xe8
0000             52   _ADC0CN1        DATA 0xb2
0000             53   _ADC0CN2        DATA 0xb3
0000             54   _ADC0GTH        DATA 0xc4
0000             55   _ADC0GTL        DATA 0xc3
0000             56   _ADC0H          DATA 0xbe
0000             57   _ADC0L          DATA 0xbd
0000             58   _ADC0LTH        DATA 0xc6
0000             59   _ADC0LTL        DATA 0xc5
0000             60   _ADC0MX         DATA 0xbb
0000             61   _B              DATA 0xf0
0000             62   _CKCON0         DATA 0x8e
0000             63   _CKCON1         DATA 0xa6
0000             64   _CLEN0          DATA 0xc6
0000             65   _CLIE0          DATA 0xc7
0000             66   _CLIF0          DATA 0xe8
0000             67   _CLKSEL         DATA 0xa9
0000             68   _CLOUT0         DATA 0xd1
0000             69   _CLU0CF         DATA 0xb1
0000             70   _CLU0FN         DATA 0xaf
0000             71   _CLU0MX         DATA 0x84
0000             72   _CLU1CF         DATA 0xb3
0000             73   _CLU1FN         DATA 0xb2
0000             74   _CLU1MX         DATA 0x85
0000             75   _CLU2CF         DATA 0xb6
0000             76   _CLU2FN         DATA 0xb5
0000             77   _CLU2MX         DATA 0x91
0000             78   _CLU3CF         DATA 0xbf
0000             79   _CLU3FN         DATA 0xbe
0000             80   _CLU3MX         DATA 0xae
0000             81   _CMP0CN0        DATA 0x9b
0000             82   _CMP0CN1        DATA 0x99
0000             83   _CMP0MD         DATA 0x9d
0000             84   _CMP0MX         DATA 0x9f
0000             85   _CMP1CN0        DATA 0xbf
0000             86   _CMP1CN1        DATA 0xac
0000             87   _CMP1MD         DATA 0xab
0000             88   _CMP1MX         DATA 0xaa
0000             89   _CRC0CN0        DATA 0xce
0000             90   _CRC0CN1        DATA 0x86
0000             91   _CRC0CNT        DATA 0xd3
0000             92   _CRC0DAT        DATA 0xcb
0000             93   _CRC0FLIP       DATA 0xcf
0000             94   _CRC0IN         DATA 0xca
0000             95   _CRC0ST         DATA 0xd2
0000             96   _DAC0CF0        DATA 0x91
0000             97   _DAC0CF1        DATA 0x92
0000             98   _DAC0H          DATA 0x85
0000             99   _DAC0L          DATA 0x84
0000            100   _DAC1CF0        DATA 0x93
0000            101   _DAC1CF1        DATA 0x94
0000            102   _DAC1H          DATA 0x8a
0000            103   _DAC1L          DATA 0x89
0000            104   _DAC2CF0        DATA 0x95
0000            105   _DAC2CF1        DATA 0x96
0000            106   _DAC2H          DATA 0x8c
0000            107   _DAC2L          DATA 0x8b
0000            108   _DAC3CF0        DATA 0x9a
0000            109   _DAC3CF1        DATA 0x9c
0000            110   _DAC3H          DATA 0x8e
0000            111   _DAC3L          DATA 0x8d
0000            112   _DACGCF0        DATA 0x88
0000            113   _DACGCF1        DATA 0x98
0000            114   _DACGCF2        DATA 0xa2
0000            115   _DERIVID        DATA 0xad
0000            116   _DEVICEID       DATA 0xb5
0000            117   _DPH            DATA 0x83
0000            118   _DPL            DATA 0x82
0000            119   _EIE1           DATA 0xe6
0000            120   _EIE2           DATA 0xf3
0000            121   _EIP1           DATA 0xbb
0000            122   _EIP1H          DATA 0xee
0000            123   _EIP2           DATA 0xed
0000            124   _EIP2H          DATA 0xf6
0000            125   _EMI0CN         DATA 0xe7
0000            126   _FLKEY          DATA 0xb7
0000            127   _HFO0CAL        DATA 0xc7
0000            128   _HFO1CAL        DATA 0xd6
0000            129   _HFOCN          DATA 0xef
0000            130   _I2C0ADM        DATA 0xff
0000            131   _I2C0CN0        DATA 0xba
0000            132   _I2C0DIN        DATA 0xbc
0000            133   _I2C0DOUT       DATA 0xbb
0000            134   _I2C0FCN0       DATA 0xad
0000            135   _I2C0FCN1       DATA 0xab
0000            136   _I2C0FCT        DATA 0xf5
0000            137   _I2C0SLAD       DATA 0xbd
0000            138   _I2C0STAT       DATA 0xb9
0000            139   _IE             DATA 0xa8
0000            140   _IP             DATA 0xb8
0000            141   _IPH            DATA 0xf2
0000            142   _IT01CF         DATA 0xe4
0000            143   _LFO0CN         DATA 0xb1
0000            144   _P0             DATA 0x80
0000            145   _P0MASK         DATA 0xfe
0000            146   _P0MAT          DATA 0xfd
0000            147   _P0MDIN         DATA 0xf1
0000            148   _P0MDOUT        DATA 0xa4
0000            149   _P0SKIP         DATA 0xd4
0000            150   _P1             DATA 0x90
0000            151   _P1MASK         DATA 0xee
0000            152   _P1MAT          DATA 0xed
0000            153   _P1MDIN         DATA 0xf2
0000            154   _P1MDOUT        DATA 0xa5
0000            155   _P1SKIP         DATA 0xd5
0000            156   _P2             DATA 0xa0
0000            157   _P2MASK         DATA 0xfc
0000            158   _P2MAT          DATA 0xfb
0000            159   _P2MDIN         DATA 0xf3
0000            160   _P2MDOUT        DATA 0xa6
0000            161   _P2SKIP         DATA 0xcc
0000            162   _P3             DATA 0xb0
0000            163   _P3MDIN         DATA 0xf4
0000            164   _P3MDOUT        DATA 0x9c
0000            165   _PCA0CENT       DATA 0x9e
0000            166   _PCA0CLR        DATA 0x9c
0000            167   _PCA0CN0        DATA 0xd8
0000            168   _PCA0CPH0       DATA 0xfc
0000            169   _PCA0CPH1       DATA 0xea
0000            170   _PCA0CPH2       DATA 0xec
0000            171   _PCA0CPH3       DATA 0xf5
0000            172   _PCA0CPH4       DATA 0x85
0000            173   _PCA0CPH5       DATA 0xde
0000            174   _PCA0CPL0       DATA 0xfb
0000            175   _PCA0CPL1       DATA 0xe9
0000            176   _PCA0CPL2       DATA 0xeb
0000            177   _PCA0CPL3       DATA 0xf4
0000            178   _PCA0CPL4       DATA 0x84
0000            179   _PCA0CPL5       DATA 0xdd
0000            180   _PCA0CPM0       DATA 0xda
0000            181   _PCA0CPM1       DATA 0xdb
0000            182   _PCA0CPM2       DATA 0xdc
0000            183   _PCA0CPM3       DATA 0xae
0000            184   _PCA0CPM4       DATA 0xaf
0000            185   _PCA0CPM5       DATA 0xcc
0000            186   _PCA0H          DATA 0xfa
0000            187   _PCA0L          DATA 0xf9
0000            188   _PCA0MD         DATA 0xd9
0000            189   _PCA0POL        DATA 0x96
0000            190   _PCA0PWM        DATA 0xf7
0000            191   _PCON0          DATA 0x87
0000            192   _PCON1          DATA 0xcd
0000            193   _PFE0CN         DATA 0xc1
0000            194   _PRTDRV         DATA 0xf6
0000            195   _PSCTL          DATA 0x8f
0000            196   _PSTAT0         DATA 0xaa
0000            197   _PSW            DATA 0xd0
0000            198   _REF0CN         DATA 0xd1
0000            199   _REG0CN         DATA 0xc9
0000            200   _REVID          DATA 0xb6
0000            201   _RSTSRC         DATA 0xef
0000            202   _SBCON1         DATA 0x94
0000            203   _SBRLH1         DATA 0x96
0000            204   _SBRLL1         DATA 0x95
0000            205   _SBUF           DATA 0x99
0000            206   _SBUF0          DATA 0x99
0000            207   _SBUF1          DATA 0x92
0000            208   _SCON           DATA 0x98
0000            209   _SCON0          DATA 0x98
0000            210   _SCON1          DATA 0xc8
0000            211   _SFRPAGE        DATA 0xa7
0000            212   _SFRPGCN        DATA 0xbc
0000            213   _SFRSTACK       DATA 0xd7
0000            214   _SMB0ADM        DATA 0xd6
0000            215   _SMB0ADR        DATA 0xd7
0000            216   _SMB0CF         DATA 0xc1
0000            217   _SMB0CN0        DATA 0xc0
0000            218   _SMB0DAT        DATA 0xc2
0000            219   _SMB0FCN0       DATA 0xc3
0000            220   _SMB0FCN1       DATA 0xc4
0000            221   _SMB0FCT        DATA 0xef
0000            222   _SMB0RXLN       DATA 0xc5
0000            223   _SMB0TC         DATA 0xac
0000            224   _SMOD1          DATA 0x93
0000            225   _SP             DATA 0x81
0000            226   _SPI0CFG        DATA 0xa1
0000            227   _SPI0CKR        DATA 0xa2
0000            228   _SPI0CN0        DATA 0xf8
0000            229   _SPI0DAT        DATA 0xa3
0000            230   _SPI0FCN0       DATA 0x9a
0000            231   _SPI0FCN1       DATA 0x9b
0000            232   _SPI0FCT        DATA 0xf7
0000            233   _SPI0PCF        DATA 0xdf
0000            234   _TCON           DATA 0x88
0000            235   _TH0            DATA 0x8c
0000            236   _TH1            DATA 0x8d
0000            237   _TL0            DATA 0x8a
0000            238   _TL1            DATA 0x8b
0000            239   _TMOD           DATA 0x89
0000            240   _TMR2CN0        DATA 0xc8
0000            241   _TMR2CN1        DATA 0xfd
0000            242   _TMR2H          DATA 0xcf
0000            243   _TMR2L          DATA 0xce
0000            244   _TMR2RLH        DATA 0xcb
0000            245   _TMR2RLL        DATA 0xca
0000            246   _TMR3CN0        DATA 0x91
0000            247   _TMR3CN1        DATA 0xfe
0000            248   _TMR3H          DATA 0x95
0000            249   _TMR3L          DATA 0x94
0000            250   _TMR3RLH        DATA 0x93
0000            251   _TMR3RLL        DATA 0x92
0000            252   _TMR4CN0        DATA 0x98
0000            253   _TMR4CN1        DATA 0xff
0000            254   _TMR4H          DATA 0xa5
0000            255   _TMR4L          DATA 0xa4
0000            256   _TMR4RLH        DATA 0xa3
0000            257   _TMR4RLL        DATA 0xa2
0000            258   _TMR5CN0        DATA 0xc0
0000            259   _TMR5CN1        DATA 0xf1
0000            260   _TMR5H          DATA 0xd5
0000            261   _TMR5L          DATA 0xd4
0000            262   _TMR5RLH        DATA 0xd3
0000            263   _TMR5RLL        DATA 0xd2
0000            264   _UART0PCF       DATA 0xd9
0000            265   _UART1FCN0      DATA 0x9d
0000            266   _UART1FCN1      DATA 0xd8
0000            267   _UART1FCT       DATA 0xfa
0000            268   _UART1LIN       DATA 0x9e
0000            269   _UART1PCF       DATA 0xda
0000            270   _VDM0CN         DATA 0xff
0000            271   _WDTCN          DATA 0x97
0000            272   _XBR0           DATA 0xe1
0000            273   _XBR1           DATA 0xe2
0000            274   _XBR2           DATA 0xe3
0000            275   _XOSC0CN        DATA 0x86
0000            276   _DPTR           DATA 0x8382
0000            277   _TMR2RL         DATA 0xcbca
0000            278   _TMR3RL         DATA 0x9392
0000            279   _TMR4RL         DATA 0xa3a2
0000            280   _TMR5RL         DATA 0xd3d2
0000            281   _TMR0           DATA 0x8c8a
0000            282   _TMR1           DATA 0x8d8b
0000            283   _TMR2           DATA 0xcfce
0000            284   _TMR3           DATA 0x9594
0000            285   _TMR4           DATA 0xa5a4
0000            286   _TMR5           DATA 0xd5d4
0000            287   _SBRL1          DATA 0x9695
0000            288   _PCA0           DATA 0xfaf9
0000            289   _PCA0CP0        DATA 0xfcfb
0000            290   _PCA0CP1        DATA 0xeae9
0000            291   _PCA0CP2        DATA 0xeceb
0000            292   _PCA0CP3        DATA 0xf5f4
0000            293   _PCA0CP4        DATA 0x8584
0000            294   _PCA0CP5        DATA 0xdedd
0000            295   _ADC0ASA        DATA 0xb6b5
0000            296   _ADC0GT         DATA 0xc4c3
0000            297   _ADC0           DATA 0xbebd
0000            298   _ADC0LT         DATA 0xc6c5
0000            299   _DAC0           DATA 0x8584
0000            300   _DAC1           DATA 0x8a89
0000            301   _DAC2           DATA 0x8c8b
0000            302   _DAC3           DATA 0x8e8d
0000            303   ;--------------------------------------------------------
0000            304   ; special function bits
0000            305   ;--------------------------------------------------------
0000            306   _ACC_0          BIT 0xe0
0000            307   _ACC_1          BIT 0xe1
0000            308   _ACC_2          BIT 0xe2
0000            309   _ACC_3          BIT 0xe3
0000            310   _ACC_4          BIT 0xe4
0000            311   _ACC_5          BIT 0xe5
0000            312   _ACC_6          BIT 0xe6
0000            313   _ACC_7          BIT 0xe7
0000            314   _TEMPE          BIT 0xe8
0000            315   _ADGN0          BIT 0xe9
0000            316   _ADGN1          BIT 0xea
0000            317   _ADWINT         BIT 0xeb
0000            318   _ADBUSY         BIT 0xec
0000            319   _ADINT          BIT 0xed
0000            320   _IPOEN          BIT 0xee
0000            321   _ADEN           BIT 0xef
0000            322   _B_0            BIT 0xf0
0000            323   _B_1            BIT 0xf1
0000            324   _B_2            BIT 0xf2
0000            325   _B_3            BIT 0xf3
0000            326   _B_4            BIT 0xf4
0000            327   _B_5            BIT 0xf5
0000            328   _B_6            BIT 0xf6
0000            329   _B_7            BIT 0xf7
0000            330   _C0FIF          BIT 0xe8
0000            331   _C0RIF          BIT 0xe9
0000            332   _C1FIF          BIT 0xea
0000            333   _C1RIF          BIT 0xeb
0000            334   _C2FIF          BIT 0xec
0000            335   _C2RIF          BIT 0xed
0000            336   _C3FIF          BIT 0xee
0000            337   _C3RIF          BIT 0xef
0000            338   _D1SRC0         BIT 0x88
0000            339   _D1SRC1         BIT 0x89
0000            340   _D1AMEN         BIT 0x8a
0000            341   _D01REFSL       BIT 0x8b
0000            342   _D3SRC0         BIT 0x8c
0000            343   _D3SRC1         BIT 0x8d
0000            344   _D3AMEN         BIT 0x8e
0000            345   _D23REFSL       BIT 0x8f
0000            346   _D0UDIS         BIT 0x98
0000            347   _D1UDIS         BIT 0x99
0000            348   _D2UDIS         BIT 0x9a
0000            349   _D3UDIS         BIT 0x9b
0000            350   _EX0            BIT 0xa8
0000            351   _ET0            BIT 0xa9
0000            352   _EX1            BIT 0xaa
0000            353   _ET1            BIT 0xab
0000            354   _ES0            BIT 0xac
0000            355   _ET2            BIT 0xad
0000            356   _ESPI0          BIT 0xae
0000            357   _EA             BIT 0xaf
0000            358   _PX0            BIT 0xb8
0000            359   _PT0            BIT 0xb9
0000            360   _PX1            BIT 0xba
0000            361   _PT1            BIT 0xbb
0000            362   _PS0            BIT 0xbc
0000            363   _PT2            BIT 0xbd
0000            364   _PSPI0          BIT 0xbe
0000            365   _P0_0           BIT 0x80
0000            366   _P0_1           BIT 0x81
0000            367   _P0_2           BIT 0x82
0000            368   _P0_3           BIT 0x83
0000            369   _P0_4           BIT 0x84
0000            370   _P0_5           BIT 0x85
0000            371   _P0_6           BIT 0x86
0000            372   _P0_7           BIT 0x87
0000            373   _P1_0           BIT 0x90
0000            374   _P1_1           BIT 0x91
0000            375   _P1_2           BIT 0x92
0000            376   _P1_3           BIT 0x93
0000            377   _P1_4           BIT 0x94
0000            378   _P1_5           BIT 0x95
0000            379   _P1_6           BIT 0x96
0000            380   _P1_7           BIT 0x97
0000            381   _P2_0           BIT 0xa0
0000            382   _P2_1           BIT 0xa1
0000            383   _P2_2           BIT 0xa2
0000            384   _P2_3           BIT 0xa3
0000            385   _P2_4           BIT 0xa4
0000            386   _P2_5           BIT 0xa5
0000            387   _P2_6           BIT 0xa6
0000            388   _P3_0           BIT 0xb0
0000            389   _P3_1           BIT 0xb1
0000            390   _P3_2           BIT 0xb2
0000            391   _P3_3           BIT 0xb3
0000            392   _P3_4           BIT 0xb4
0000            393   _P3_7           BIT 0xb7
0000            394   _CCF0           BIT 0xd8
0000            395   _CCF1           BIT 0xd9
0000            396   _CCF2           BIT 0xda
0000            397   _CCF3           BIT 0xdb
0000            398   _CCF4           BIT 0xdc
0000            399   _CCF5           BIT 0xdd
0000            400   _CR             BIT 0xde
0000            401   _CF             BIT 0xdf
0000            402   _PARITY         BIT 0xd0
0000            403   _F1             BIT 0xd1
0000            404   _OV             BIT 0xd2
0000            405   _RS0            BIT 0xd3
0000            406   _RS1            BIT 0xd4
0000            407   _F0             BIT 0xd5
0000            408   _AC             BIT 0xd6
0000            409   _CY             BIT 0xd7
0000            410   _RI             BIT 0x98
0000            411   _TI             BIT 0x99
0000            412   _RB8            BIT 0x9a
0000            413   _TB8            BIT 0x9b
0000            414   _REN            BIT 0x9c
0000            415   _CE             BIT 0x9d
0000            416   _SMODE          BIT 0x9e
0000            417   _RI1            BIT 0xc8
0000            418   _TI1            BIT 0xc9
0000            419   _RBX1           BIT 0xca
0000            420   _TBX1           BIT 0xcb
0000            421   _REN1           BIT 0xcc
0000            422   _PERR1          BIT 0xcd
0000            423   _OVR1           BIT 0xce
0000            424   _SI             BIT 0xc0
0000            425   _ACK            BIT 0xc1
0000            426   _ARBLOST        BIT 0xc2
0000            427   _ACKRQ          BIT 0xc3
0000            428   _STO            BIT 0xc4
0000            429   _STA            BIT 0xc5
0000            430   _TXMODE         BIT 0xc6
0000            431   _MASTER         BIT 0xc7
0000            432   _SPIEN          BIT 0xf8
0000            433   _TXNF           BIT 0xf9
0000            434   _NSSMD0         BIT 0xfa
0000            435   _NSSMD1         BIT 0xfb
0000            436   _RXOVRN         BIT 0xfc
0000            437   _MODF           BIT 0xfd
0000            438   _WCOL           BIT 0xfe
0000            439   _SPIF           BIT 0xff
0000            440   _IT0            BIT 0x88
0000            441   _IE0            BIT 0x89
0000            442   _IT1            BIT 0x8a
0000            443   _IE1            BIT 0x8b
0000            444   _TR0            BIT 0x8c
0000            445   _TF0            BIT 0x8d
0000            446   _TR1            BIT 0x8e
0000            447   _TF1            BIT 0x8f
0000            448   _T2XCLK0        BIT 0xc8
0000            449   _T2XCLK1        BIT 0xc9
0000            450   _TR2            BIT 0xca
0000            451   _T2SPLIT        BIT 0xcb
0000            452   _TF2CEN         BIT 0xcc
0000            453   _TF2LEN         BIT 0xcd
0000            454   _TF2L           BIT 0xce
0000            455   _TF2H           BIT 0xcf
0000            456   _T4XCLK0        BIT 0x98
0000            457   _T4XCLK1        BIT 0x99
0000            458   _TR4            BIT 0x9a
0000            459   _T4SPLIT        BIT 0x9b
0000            460   _TF4CEN         BIT 0x9c
0000            461   _TF4LEN         BIT 0x9d
0000            462   _TF4L           BIT 0x9e
0000            463   _TF4H           BIT 0x9f
0000            464   _T5XCLK0        BIT 0xc0
0000            465   _T5XCLK1        BIT 0xc1
0000            466   _TR5            BIT 0xc2
0000            467   _T5SPLIT        BIT 0xc3
0000            468   _TF5CEN         BIT 0xc4
0000            469   _TF5LEN         BIT 0xc5
0000            470   _TF5L           BIT 0xc6
0000            471   _TF5H           BIT 0xc7
0000            472   _RIE            BIT 0xd8
0000            473   _RXTO0          BIT 0xd9
0000            474   _RXTO1          BIT 0xda
0000            475   _RFRQ           BIT 0xdb
0000            476   _TIE            BIT 0xdc
0000            477   _TXHOLD         BIT 0xdd
0000            478   _TXNF1          BIT 0xde
0000            479   _TFRQ           BIT 0xdf
0000            480   ;--------------------------------------------------------
0000            481   ; overlayable register banks
0000            482   ;--------------------------------------------------------
0000            483            rbank0 segment data overlay
0000            484   ;--------------------------------------------------------
0000            485   ; internal ram data
0000            486   ;--------------------------------------------------------
0000            487            rseg R_DSEG
0000            488   _milliseconds:
0000            489            ds 2
0002            490   _seconds:
0002            491            ds 1
0003            492   _minutes:
0003            493            ds 1
0004            494   _hours:
0004            495            ds 1
0005            496   _gauge_state:
0005            497            ds 1
0006            498   ;--------------------------------------------------------
0006            499   ; overlayable items in internal ram 
0006            500   ;--------------------------------------------------------
0000            501            rseg R_OSEG
0000            502   ;--------------------------------------------------------
0000            503   ; indirectly addressable internal ram data
0000            504   ;--------------------------------------------------------
0000            505            rseg R_ISEG
0000            506   ;--------------------------------------------------------
0000            507   ; absolute internal ram data
0000            508   ;--------------------------------------------------------
0000            509            DSEG
0000            510   ;--------------------------------------------------------
0000            511   ; bit data
0000            512   ;--------------------------------------------------------
0000            513            rseg R_BSEG
0000            514   ;--------------------------------------------------------
0000            515   ; paged external ram data
0000            516   ;--------------------------------------------------------
0000            517            rseg R_PSEG
0000            518   ;--------------------------------------------------------
0000            519   ; external ram data
0000            520   ;--------------------------------------------------------
0000            521            rseg R_XSEG
0000            522   ;--------------------------------------------------------
0000            523   ; absolute external ram data
0000            524   ;--------------------------------------------------------
0000            525            XSEG
0000            526   ;--------------------------------------------------------
0000            527   ; external initialized ram data
0000            528   ;--------------------------------------------------------
0000            529            rseg R_IXSEG
0000            530            rseg R_HOME
0000            531            rseg R_GSINIT
0000            532            rseg R_CSEG
0000            533   ;--------------------------------------------------------
0000            534   ; Reset entry point and interrupt vectors
0000            535   ;--------------------------------------------------------
0000            536            CSEG at 0x0000
0000 020100     537            ljmp    _crt0
002B            538            CSEG at 0x002b
002B 020100     539            ljmp    _Timer2_ISR
002E            540   ;--------------------------------------------------------
002E            541   ; global & static initialisations
002E            542   ;--------------------------------------------------------
0000            543            rseg R_HOME
0000            544            rseg R_GSINIT
0000            545            rseg R_GSINIT
0000            546   ;--------------------------------------------------------
0000            547   ; data variables initialization
0000            548   ;--------------------------------------------------------
0000            549            rseg R_DINIT
0000            550   ;        Main.c:21: volatile unsigned int milliseconds = 0;
0000 E4         551            clr     a
0001 F518       552            mov     _milliseconds,a
0003 F519       553            mov     (_milliseconds + 1),a
0005            554   ;        Main.c:22: volatile unsigned char seconds = 0;
0005 75D800     555            mov     _seconds,#0x00
0008            556   ;        Main.c:23: volatile unsigned char minutes = 0;
0008 759800     557            mov     _minutes,#0x00
000B            558   ;        Main.c:24: volatile unsigned char hours = 0;
000B 755800     559            mov     _hours,#0x00
000E            560   ;        Main.c:26: unsigned char gauge_state = 0;
000E 751800     561            mov     _gauge_state,#0x00
0011            562            ; The linker places a 'ret' at the end of segment R_DINIT.
0011            563   ;--------------------------------------------------------
0011            564   ; code
0011            565   ;--------------------------------------------------------
0000            566            rseg R_CSEG
0000            567   ;------------------------------------------------------------
0000            568   ;Allocation info for local variables in function '_c51_external_startup'
0000            569   ;------------------------------------------------------------
0000            570   ;------------------------------------------------------------
0000            571   ;        Main.c:35: char _c51_external_startup (void)
0000            572   ;        -----------------------------------------
0000            573   ;         function _c51_external_startup
0000            574   ;        -----------------------------------------
0000            575   __c51_external_startup:
0000            576            using   0
0000            577   ;        Main.c:38: SFRPAGE = 0x00;
0000 75A700     578            mov     _SFRPAGE,#0x00
0003            579   ;        Main.c:39: WDTCN = 0xDE; //First key
0003 7597DE     580            mov     _WDTCN,#0xDE
0006            581   ;        Main.c:40: WDTCN = 0xAD; //Second key
0006 7597AD     582            mov     _WDTCN,#0xAD
0009            583   ;        Main.c:42: SFRPAGE = 0x10;
0009 75A710     584            mov     _SFRPAGE,#0x10
000C            585   ;        Main.c:43: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
000C 75C120     586            mov     _PFE0CN,#0x20
000F            587   ;        Main.c:46: SFRPAGE = 0x00;
000F 75A700     588            mov     _SFRPAGE,#0x00
0012            589   ;        Main.c:47: CLKSEL  = 0x00;
0012 75A900     590            mov     _CLKSEL,#0x00
0015            591   ;        Main.c:48: CLKSEL  = 0x00;
0015 75A900     592            mov     _CLKSEL,#0x00
0018            593   ;        Main.c:49: while ((CLKSEL & 0x80) == 0);
0018            594   L002001?:
0018 E5A9       595            mov     a,_CLKSEL
001A 30E700     596            jnb     acc.7,L002001?
001D            597   ;        Main.c:52: CLKSEL = 0x03;
001D 75A903     598            mov     _CLKSEL,#0x03
0020            599   ;        Main.c:53: CLKSEL = 0x03;
0020 75A903     600            mov     _CLKSEL,#0x03
0023            601   ;        Main.c:54: while ((CLKSEL & 0x80) == 0);
0023            602   L002004?:
0023 E5A9       603            mov     a,_CLKSEL
0025 30E780     604            jnb     acc.7,L002004?
0028            605   ;        Main.c:56: XBR0 = 0X00;
0028 75E100     606            mov     _XBR0,#0x00
002B            607   ;        Main.c:57: XBR1 = 0X00;
002B 75E200     608            mov     _XBR1,#0x00
002E            609   ;        Main.c:58: XBR2 = 0x40; // Enable crossbar and weak pull-ups
002E 75E340     610            mov     _XBR2,#0x40
0031            611   ;        Main.c:60: return 0;
0031 758200     612            mov     dpl,#0x00
0034 22         613            ret
0035            614   ;------------------------------------------------------------
0035            615   ;Allocation info for local variables in function 'UART0_init'
0035            616   ;------------------------------------------------------------
0035            617   ;------------------------------------------------------------
0035            618   ;        Main.c:63: void UART0_init(void) {
0035            619   ;        -----------------------------------------
0035            620   ;         function UART0_init
0035            621   ;        -----------------------------------------
0035            622   _UART0_init:
0035            623   ;        Main.c:64: SCON0 = 0x10;
0035 759810     624            mov     _SCON0,#0x10
0038            625   ;        Main.c:66: Timer1_init();
0038 120100     626            lcall   _Timer1_init
003B            627   ;        Main.c:68: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output and UART1 Tx (pin 0.2)
003B 43A410     628            orl     _P0MDOUT,#0x10
003E            629   ;        Main.c:69: XBR0    |= 0b_0000_0001; // Enable UART0 on P0.4(TX) and P0.5(RX) and SMB0 I/O on (0.0 SDA) and (0.1 SCL)
003E 43E101     630            orl     _XBR0,#0x01
0041            631   ;        Main.c:70: XBR1     = 0x00;
0041 75E200     632            mov     _XBR1,#0x00
0044            633   ;        Main.c:71: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0044 75E340     634            mov     _XBR2,#0x40
0047 22         635            ret
0048            636   ;------------------------------------------------------------
0048            637   ;Allocation info for local variables in function 'Timer1_init'
0048            638   ;------------------------------------------------------------
0048            639   ;------------------------------------------------------------
0048            640   ;        Main.c:75: void Timer1_init(void) {
0048            641   ;        -----------------------------------------
0048            642   ;         function Timer1_init
0048            643   ;        -----------------------------------------
0048            644   _Timer1_init:
0048            645   ;        Main.c:76: CKCON0 |= 0b_0000_0000; // Timer 1 uses the system clock divided by 12.
0048 858E8E     646            mov     _CKCON0,_CKCON0
004B            647   ;        Main.c:77: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
004B 758DE6     648            mov     _TH1,#0xE6
004E            649   ;        Main.c:78: TL1 = TH1;      // Init Timer1
004E 858D8B     650            mov     _TL1,_TH1
0051            651   ;        Main.c:79: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0051 53890F     652            anl     _TMOD,#0x0F
0054            653   ;        Main.c:80: TMOD |=  0x20;                       
0054 438920     654            orl     _TMOD,#0x20
0057            655   ;        Main.c:81: TR1 = 1; // START Timer1
0057 D28E       656            setb    _TR1
0059            657   ;        Main.c:82: TI = 1;  // Indicate TX0 ready
0059 D299       658            setb    _TI
005B 22         659            ret
005C            660   ;------------------------------------------------------------
005C            661   ;Allocation info for local variables in function 'Timer2_init'
005C            662   ;------------------------------------------------------------
005C            663   ;------------------------------------------------------------
005C            664   ;        Main.c:85: void Timer2_init(void) {
005C            665   ;        -----------------------------------------
005C            666   ;         function Timer2_init
005C            667   ;        -----------------------------------------
005C            668   _Timer2_init:
005C            669   ;        Main.c:86: CKCON0 &= 0xF7; //Timer2 set to use T2XCLK
005C 538EF7     670            anl     _CKCON0,#0xF7
005F            671   ;        Main.c:88: TMR2CN0 = 0b_0000_0000; // T2XCLK = (SYSCLK/12)
005F 75C800     672            mov     _TMR2CN0,#0x00
0062            673   ;        Main.c:89: TMR2RL = 65536 - (SYSCLK/12)/1000; // F = 1000hz, T = 1ms
0062 75CA90     674            mov     _TMR2RL,#0x90
0065 75CBE8     675            mov     (_TMR2RL >> 8),#0xE8
0068            676   ;        Main.c:90: TMR2 = 0xffff;
0068 75CEFF     677            mov     _TMR2,#0xFF
006B 75CFFF     678            mov     (_TMR2 >> 8),#0xFF
006E            679   ;        Main.c:91: ET2 = 1; //Enable Timer2 interrupts
006E D2AD       680            setb    _ET2
0070            681   ;        Main.c:92: TR2 = 1; //Start Timer2
0070 D2CA       682            setb    _TR2
0072 22         683            ret
0073            684   ;------------------------------------------------------------
0073            685   ;Allocation info for local variables in function 'Timer2_ISR'
0073            686   ;------------------------------------------------------------
0073            687   ;------------------------------------------------------------
0073            688   ;        Main.c:95: void Timer2_ISR(void) interrupt 5 {
0073            689   ;        -----------------------------------------
0073            690   ;         function Timer2_ISR
0073            691   ;        -----------------------------------------
0073            692   _Timer2_ISR:
0073 C0E0       693            push    acc
0075 C0D0       694            push    psw
0077 75D000     695            mov     psw,#0x00
007A            696   ;        Main.c:96: TF2H = 0;
007A C2CF       697            clr     _TF2H
007C            698   ;        Main.c:98: milliseconds++;
007C 7401       699            mov     a,#0x01
007E 2518       700            add     a,_milliseconds
0080 F518       701            mov     _milliseconds,a
0082 E4         702            clr     a
0083 3519       703            addc    a,(_milliseconds + 1)
0085 F519       704            mov     (_milliseconds + 1),a
0087            705   ;        Main.c:100: if (milliseconds == 1000) {
0087 74E8       706            mov     a,#0xE8
0089 B51840     707            cjne    a,_milliseconds,L006009?
008C 7403       708            mov     a,#0x03
008E B51940     709            cjne    a,(_milliseconds + 1),L006009?
0091            710   ;        Main.c:101: milliseconds = 0;
0091 E4         711            clr     a
0092 F518       712            mov     _milliseconds,a
0094 F519       713            mov     (_milliseconds + 1),a
0096            714   ;        Main.c:102: seconds++;
0096 05D8       715            inc     _seconds
0098            716   ;        Main.c:103: BLUE_LED = !BLUE_LED; //Changes Pin2.2 every 1 second
0098 B2A2       717            cpl     _P2_2
009A            718   ;        Main.c:104: if (seconds == 60) {
009A 743C       719            mov     a,#0x3C
009C B5D840     720            cjne    a,_seconds,L006009?
009F            721   ;        Main.c:105: seconds = 0;
009F 75D800     722            mov     _seconds,#0x00
00A2            723   ;        Main.c:106: minutes++;
00A2 0598       724            inc     _minutes
00A4            725   ;        Main.c:107: if (minutes == 60) {
00A4 743C       726            mov     a,#0x3C
00A6 B59840     727            cjne    a,_minutes,L006009?
00A9            728   ;        Main.c:108: minutes = 0;
00A9 759800     729            mov     _minutes,#0x00
00AC            730   ;        Main.c:109: hours++;
00AC 0558       731            inc     _hours
00AE            732   ;        Main.c:110: if (hours == 24) {
00AE 7418       733            mov     a,#0x18
00B0 B55840     734            cjne    a,_hours,L006009?
00B3            735   ;        Main.c:111: hours = 0;
00B3 755800     736            mov     _hours,#0x00
00B6            737   L006009?:
00B6 D0D0       738            pop     psw
00B8 D0E0       739            pop     acc
00BA 32         740            reti
00BB            741   ;        eliminated unneeded push/pop dpl
00BB            742   ;        eliminated unneeded push/pop dph
00BB            743   ;        eliminated unneeded push/pop b
00BB            744   ;------------------------------------------------------------
00BB            745   ;Allocation info for local variables in function 'Pin_init'
00BB            746   ;------------------------------------------------------------
00BB            747   ;------------------------------------------------------------
00BB            748   ;        Main.c:118: void Pin_init(void) {
00BB            749   ;        -----------------------------------------
00BB            750   ;         function Pin_init
00BB            751   ;        -----------------------------------------
00BB            752   _Pin_init:
00BB            753   ;        Main.c:119: PRTDRV = 0x04; //Port 2 High Drive Strength
00BB 75F604     754            mov     _PRTDRV,#0x04
00BE            755   ;        Main.c:120: P1MDOUT = 0b_0000_0011; //P1.0, P1.1 set out push_pull
00BE 75A503     756            mov     _P1MDOUT,#0x03
00C1            757   ;        Main.c:121: P2MDOUT = 0b_0000_0111; //P2.0, P2.1, P2.2 set as push_pull output
00C1 75A607     758            mov     _P2MDOUT,#0x07
00C4            759   ;        Main.c:123: GAUGE_OUTPUT_1 = 0;
00C4 C2A0       760            clr     _P2_0
00C6            761   ;        Main.c:124: GAUGE_OUTPUT_2 = 0;
00C6 C2A1       762            clr     _P2_1
00C8            763   ;        Main.c:125: BLUE_LED = 0;
00C8 C2A2       764            clr     _P2_2
00CA 22         765            ret
00CB            766   ;------------------------------------------------------------
00CB            767   ;Allocation info for local variables in function 'getIO'
00CB            768   ;------------------------------------------------------------
00CB            769   ;------------------------------------------------------------
00CB            770   ;        Main.c:128: void getIO(void) {
00CB            771   ;        -----------------------------------------
00CB            772   ;         function getIO
00CB            773   ;        -----------------------------------------
00CB            774   _getIO:
00CB            775   ;        Main.c:129: if (SWITCH_1_1 == 0) {
00CB 209080     776            jb      _P1_0,L008005?
00CE            777   ;        Main.c:130: gauge_state = 0;
00CE 751800     778            mov     _gauge_state,#0x00
00D1 22         779            ret
00D2            780   L008005?:
00D2            781   ;        Main.c:131: } else if (SWITCH_1_2 == 0) {
00D2 2091C0     782            jb      _P1_1,L008002?
00D5            783   ;        Main.c:132: gauge_state = 2;
00D5 751802     784            mov     _gauge_state,#0x02
00D8            785   ;        Main.c:134: gauge_state = 1;
00D8 22         786            ret
00D9            787   L008002?:
00D9 751801     788            mov     _gauge_state,#0x01
00DC 22         789            ret
00DD            790   ;------------------------------------------------------------
00DD            791   ;Allocation info for local variables in function 'gauge_update'
00DD            792   ;------------------------------------------------------------
00DD            793   ;------------------------------------------------------------
00DD            794   ;        Main.c:138: void gauge_update(void) {
00DD            795   ;        -----------------------------------------
00DD            796   ;         function gauge_update
00DD            797   ;        -----------------------------------------
00DD            798   _gauge_update:
00DD            799   ;        Main.c:139: switch(gauge_state) {
00DD E4         800            clr     a
00DE B51800     801            cjne    a,_gauge_state,L009011?
00E1 8001       802            sjmp    L009001?
00E3            803   L009011?:
00E3 7401       804            mov     a,#0x01
00E5 B51880     805            cjne    a,_gauge_state,L009012?
00E8 8001       806            sjmp    L009002?
00EA            807   L009012?:
00EA 7402       808            mov     a,#0x02
00EC            809   ;        Main.c:140: case 0:
00EC B51800     810            cjne    a,_gauge_state,L009004?
00EF 8001       811            sjmp    L009003?
00F1            812   L009001?:
00F1            813   ;        Main.c:141: GAUGE_OUTPUT_1 = 0; // Both outputs off to turn the gauges off.
00F1 C2A0       814            clr     _P2_0
00F3            815   ;        Main.c:142: GAUGE_OUTPUT_2 = 0; // Switch Up
00F3 C2A1       816            clr     _P2_1
00F5            817   ;        Main.c:143: break;
00F5            818   ;        Main.c:144: case 1:
00F5 22         819            ret
00F6            820   L009002?:
00F6            821   ;        Main.c:145: GAUGE_OUTPUT_1 = 1; // Turn on base color output (white)
00F6 D2A0       822            setb    _P2_0
00F8            823   ;        Main.c:146: GAUGE_OUTPUT_2 = 0; // Switch Middle
00F8 C2A1       824            clr     _P2_1
00FA            825   ;        Main.c:147: break;
00FA            826   ;        Main.c:148: case 2:
00FA 22         827            ret
00FB            828   L009003?:
00FB            829   ;        Main.c:149: GAUGE_OUTPUT_1 = 1; // Turn on auxillary color output (blue)
00FB D2A0       830            setb    _P2_0
00FD            831   ;        Main.c:150: GAUGE_OUTPUT_2 = 1; // Switch Bottom
00FD D2A1       832            setb    _P2_1
00FF            833   ;        Main.c:151: break;
00FF            834   ;        Main.c:152: default:
00FF            835   ;        Main.c:153: gauge_state = 0;
00FF            836   ;        Main.c:154: }
00FF 22         837            ret
0100            838   L009004?:
0100 751800     839            mov     _gauge_state,#0x00
0103 22         840            ret
0104            841   ;------------------------------------------------------------
0104            842   ;Allocation info for local variables in function 'main'
0104            843   ;------------------------------------------------------------
0104            844   ;------------------------------------------------------------
0104            845   ;        Main.c:157: void main (void) {
0104            846   ;        -----------------------------------------
0104            847   ;         function main
0104            848   ;        -----------------------------------------
0104            849   _main:
0104            850   ;        Main.c:158: Pin_init();     //Initialize pins for input and output
0104 120100     851            lcall   _Pin_init
0107            852   ;        Main.c:159: Timer2_init();  //Initialize Timer2 for keeping time at a resolution of 1ms
0107 120100     853            lcall   _Timer2_init
010A            854   ;        Main.c:160: UART0_init();   //Initialize UART0 for serial communication
010A 120100     855            lcall   _UART0_init
010D            856   ;        Main.c:162: EA = 1; //Enable interrupts
010D D2AF       857            setb    _EA
010F            858   ;        Main.c:164: printf("Device Done Initializing\r\n");
010F 7480       859            mov     a,#__str_0
0111 C0E0       860            push    acc
0113 74BB       861            mov     a,#(__str_0 >> 8)
0115 C0E0       862            push    acc
0117 7480       863            mov     a,#0x80
0119 C0E0       864            push    acc
011B 120100     865            lcall   _printf
011E 1581       866            dec     sp
0120 1581       867            dec     sp
0122 1581       868            dec     sp
0124            869   ;        Main.c:166: while(1) {
0124            870   L010002?:
0124            871   ;        Main.c:167: getIO();
0124 120100     872            lcall   _getIO
0127            873   ;        Main.c:168: gauge_update();
0127 120100     874            lcall   _gauge_update
012A 8001       875            sjmp    L010002?
012C            876            rseg R_CSEG
012C            877   
0000            878            rseg R_XINIT
0000            879   
0000            880            rseg R_CONST
0000            881   __str_0:
0000 44657669   882            db 'Device Done Initializing'
     63652044
     6F6E6520
     496E6974
     69616C69
     7A696E67
0018 0D         883            db 0x0D
0019 0A         884            db 0x0A
001A 00         885            db 0x00
001B            886   
002E            887            CSEG
002E            888   
002E            889   end
